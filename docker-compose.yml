version: "3.9"

volumes:
  db_store:
  psysh_store:

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: ./infra/docker/php/Dockerfile
      target: ${APP_BUILD_TARGET:-development-xdebug}
    volumes:
      - type: bind
        source: ./product
        target: /workspace
      - type: volume
        source: psysh_store
        target: /root/.config/psysh
        volume:
          nocopy: true
    # extra_hosts:
    #   - 'host.docker.internal:host-gateway' # XDebugç”¨
    environment:
      - APP_DEBUG=${APP_DEBUG:-true}
      - APP_KEY=${APP_KEY:-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX}
      - APP_ENV=${APP_ENV:-local}
      - APP_URL=${APP_URL:-http://localhost}
      - LOG_CHANNEL=${LOG_CHANNEL:-stderr}
      - LOG_STDERR_FORMATTER=${LOG_STDERR_FORMATTER:-Monolog\Formatter\JsonFormatter}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-db_base}
      - DB_USERNAME=${DB_USERNAME:-db_user}
      - DB_PASSWORD=${DB_PASSWORD:-secret}

  web:
    container_name: web
    build:
      context: .
      dockerfile: ./infra/docker/nginx/Dockerfile
    ports:
      - target: 80
        published: ${WEB_PUBLISHED_PORT:-80}
        protocol: tcp
        mode: host
    volumes:
      - type: bind
        source: ./product
        target: /workspace

  db:
    container_name: db
    build:
      context: .
      dockerfile: ./infra/docker/mysql/Dockerfile
    ports:
      - target: 3306
        published: ${DB_PUBLISHED_PORT:-3306}
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: db_store
        target: /var/lib/mysql
        volume:
          nocopy: true
    environment:
      - TZ=Asia/Tokyo
      - MYSQL_DATABASE=${DB_DATABASE:-db_base}
      - MYSQL_USER=${DB_USERNAME:-db_user}
      - MYSQL_PASSWORD=${DB_PASSWORD:-secret}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-secret}

  phpmyadmin:
    image: phpmyadmin
    restart: always
    container_name: phpmyadmin
    ports:
      - 8080:80
    depends_on:
      - db

  mailhog:
    image: mailhog/mailhog
    ports:
      - target: 8025
        published: ${MAILHOG_PUBLISHED_PORT:-8025}
        protocol: tcp
        mode: host
